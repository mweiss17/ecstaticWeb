{
  "name": "grunt-coveralls",
  "description": "Grunt task to load coverage results and submit them to Coveralls.io",
  "version": "1.0.0",
  "homepage": "https://github.com/pimterry/grunt-coveralls",
  "author": {
    "name": "Tim Perry",
    "email": "pimterry@gmail.com",
    "url": "http://tim-perry.co.uk"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/pimterry/grunt-coveralls.git"
  },
  "bugs": {
    "url": "https://github.com/pimterry/grunt-coveralls/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/pimterry/grunt-coveralls/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test",
    "ci": "istanbul cover -- grunt test && grunt coveralls:grunt_coveralls_real_coverage"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "~0.10.0",
    "grunt-contrib-clean": "~0.6.0",
    "grunt-contrib-nodeunit": "~0.4.1",
    "grunt": "~0.4.5",
    "grunt-cli": "~0.1.13",
    "grunt-contrib-watch": "~0.6.1",
    "sinon": "^1.10.3",
    "istanbul": "~0.3.0",
    "grunt-exec": "~0.4.3"
  },
  "peerDependencies": {
    "grunt": "~0.4.5"
  },
  "keywords": [
    "gruntplugin",
    "coverage",
    "coveralls",
    "grunt",
    "lcov"
  ],
  "dependencies": {
    "coveralls": "^2.11.1"
  },
  "readme": "Grunt-Coveralls\r\n===============\r\n> Grunt task to load coverage results and submit them to Coveralls.io\r\n\r\n[![Build Status](https://travis-ci.org/pimterry/grunt-coveralls.png)](https://travis-ci.org/pimterry/grunt-coveralls) [![Coverage Status](https://coveralls.io/repos/pimterry/grunt-coveralls/badge.png?branch=master)](https://coveralls.io/r/pimterry/grunt-coveralls?branch=master) [![Dependency status](https://david-dm.org/pimterry/grunt-coveralls/status.png)](https://david-dm.org/pimterry/grunt-coveralls#info=dependencies&view=table) [![Dev Dependency Status](https://david-dm.org/pimterry/grunt-coveralls/dev-status.png)](https://david-dm.org/pimterry/grunt-coveralls#info=devDependencies&view=table)\r\n\r\n## Getting Started\r\nThis plugin requires Grunt `~0.4.2`\r\n\r\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\r\n\r\n```shell\r\nnpm install grunt-coveralls --save-dev\r\n```\r\n\r\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\r\n\r\n```js\r\ngrunt.loadNpmTasks('grunt-coveralls');\r\n```\r\n\r\n## The \"coveralls\" task\r\n\r\nGrunt-coveralls takes one or more lcov files, and uploads them to [coveralls.io](https://coveralls.io).\r\n\r\nEverything more specific than that is handled internally by [node-coveralls](https://github.com/cainus/node-coveralls), and the Coveralls service itself.\r\n\r\n\r\n### Usage\r\n\r\nThe only required option is a 'src' parameter, which accepts all the standard grunt src formats (plain path, glob, array of paths) and attempts to parse the matched lcov files and upload them.\r\n\r\nThis grunt task will pass as long as at least one file is matched, and all matched files are uploaded successfully.\r\n\r\n```js\r\ngrunt.initConfig({\r\n  coveralls: {\r\n    options: {\r\n      // LCOV coverage file relevant to every target\r\n      src: 'coverage-results/lcov.info',\r\n\r\n      // When true, grunt-coveralls will only print a warning rather than\r\n      // an error, to prevent CI builds from failing unnecessarily (e.g. if\r\n      // coveralls.io is down). Optional, defaults to false.\r\n      force: false\r\n    },\r\n    your_target: {\r\n      // Target-specific LCOV coverage file\r\n      src: 'coverage-results/extra-results-*.info'\r\n    },\r\n  },\r\n});\r\n```\r\n\r\nThis can then be run with `grunt coveralls` or `grunt coveralls:your_target`. The outcome will be printed to the console. For a practical example, look at this project, which uses itself to track its own coverage.\r\n\r\nNote if you are new to grunt: You need to specify at least one target. Just specifying the options won't work.\r\n\r\n## Contributing\r\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. To ensure your code runs correctly, run `npm test`.\r\n\r\n## Release History\r\n_(Nothing yet)_\r\n\r\n\r\n[![Bitdeli Badge](https://d2weczhvl823v0.cloudfront.net/pimterry/grunt-coveralls/trend.png)](https://bitdeli.com/free \"Bitdeli Badge\")\r\n\r\n",
  "readmeFilename": "README.md",
  "_id": "grunt-coveralls@1.0.0",
  "dist": {
    "shasum": "406f3d837ddc3c492e637171ceceab5bd728d100"
  },
  "_from": "grunt-coveralls@",
  "_resolved": "https://registry.npmjs.org/grunt-coveralls/-/grunt-coveralls-1.0.0.tgz"
}
